// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("users")
}

model Product {
  id          Int         @id @default(autoincrement()) @db.UnsignedInt
  name        String
  description String?
  price       Int         @db.UnsignedInt
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  deletedAt   DateTime?   @map("deleted_at")
  FlashSale   FlashSale[]

  @@map("products")
}

model FlashSale {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  productId Int       @map("product_id") @db.UnsignedInt
  discount  Int       @db.UnsignedInt
  startAt   DateTime  @map("start_at")
  endAt     DateTime  @map("end_at")
  quota     Int       @db.UnsignedInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  product Product @relation(fields: [productId], references: [id])

  @@map("flash_sales")
}
